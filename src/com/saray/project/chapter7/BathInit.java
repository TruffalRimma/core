package com.saray.project.chapter7;

/*
Компилятор не создает объектов для ссылок «по умолчанию», и это логично, потому
что во многих случаях это привело бы к лишним затратам ресурсов.
Если вам понадобится проинициализировать ссылку, сделайте это самостоятельно:
 □ в точке определения объекта. Это значит, что объект всегда будет инициализироваться перед вызовом конструктора;
 □ в конструкторе данного класса;
 □ непосредственно перед использованием объекта. Этот способ часто называют отложенной инициализацией.
 Он может сэкономить вам ресурсы в ситуациях, где создавать объект каждый раз необязательно и накладно;
 □ с использованием инициализации экземпляров.
В следующем примере продемонстрированы все четыре способа:
 */

// Инициализация в конструкторе с композицией

class Soap {
    private String s;

    Soap() {
        System.out.println("Soap()");
        s = "Constructed";
    }

    public String toString() {
        return s;
    }
}

public class BathInit {
    private String // Инициализация в точке определения:
            s1 = "Счастливый",
            s2 = "Счастливый",
            s3, s4;
    private Soap castille;
    private int i;
    private float toy;

    public BathInit() {
        System.out.println("B конструкторе Bath()");
        // инициализация в конструкторе
        s3 = "Радостный";
        toy = 3.14f;
        // КОМПОЗИЦИЯ
        // создается при создании ванной и полностью управляется ванной
        // при удалении экземпляра ванны - удалится и ссылка на мыло
        // следовательно сборщик мусора удалить объект без ссылки
        // в типичном примере, экземпляр мыла будет создаваться в конструкторе ванной.
        castille = new Soap();
    }

    // Инициализация экземпляра:
    {
        i = 47;
    }

    public String toString() {
        if (s4 == null) // Отложенная инициализация:
            s4 = "Радостный";
        return
                "s1 = " + s1 + "\n" +
                "s2 = " + s2 + "\n" +
                "s3 = " + s3 + "\n" +
                "s4 = " + s4 + "\n" +
                "i = " + i + "\n" +
                "toy = " + toy + "\n" +
                "castille = " + castille;
    }

    public static void main(String[] args) {
        BathInit b = new BathInit();
        System.out.println(b);
    }
}